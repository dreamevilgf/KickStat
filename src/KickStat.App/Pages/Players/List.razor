@page "/players"
@using KickStat.Models.Players
@attribute [Authorize]
@inject KickStatPlayersApiClient PlayersApiClient
@inject NavigationManager _NavigationManager;

<PageTitle>Игроки</PageTitle>

<MudGrid Class="pt-8">
    <MudItem xs="12">
        <MudPaper Class="d-flex" Elevation="0" Style="background:#F9F9F9">
            <MudText Class="pt-3" Typo="Typo.h1">Игроки</MudText>
            <MudSpacer/>
            <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                <MudTextField @bind-Value="Request.Filter.Query" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                              Class="kickstat-search mt-0"
                              TextChanged="@(async () => await InitData(1))"
                              Variant="Variant.Outlined">
                </MudTextField>
            </MudHidden>

            <MudButton
                Color="Color.Primary"
                Href="/players/edit"
                Variant="Variant.Filled"
                DisableElevation="true"
                Class="kickstat-btn ml-4">
                Создать
            </MudButton>
        </MudPaper>
        <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
            <MudTextField @bind-Value="Request.Filter.Query" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                          Class="kickstat-search mt-4"
                          TextChanged="() => InitData(1)"
                          Variant="Variant.Outlined">
            </MudTextField>
        </MudHidden>
    </MudItem>

    @if (IsLoading)
    {
        <Progress/>
    }
    else
    {
        foreach (var player in Players)
        {
            <MudItem xs="12" sm="12" md="3" lg="4">
                <MudCard Class="kickstat-card cursor-pointer" Elevation="0" @onclick="() => GoToPlayer(player.Id)">
                    <MudCardHeader>
                        <MudPaper Class="d-flex flex-column" Elevation="0">
                            <MudText Typo="Typo.h2" Class="mt-2">@(player.FullName)</MudText>
                            <MudText Typo="Typo.subtitle1" Class="kickstat-text-secondary">Год рождения: @(player.BirthYear?.ToString() ?? "-") </MudText>
                        </MudPaper>

                    </MudCardHeader>
                </MudCard>
            </MudItem>
        }
    }


    @if (TotalCount > 1)
    {
        <MudItem xs="12" Class="d-flex justify-center">
            <MudPagination Rectangular="true" Variant="Variant.Text" Count="@(TotalCount)" SelectedChanged="InitData"></MudPagination>
        </MudItem>
    }

</MudGrid>


@code {
    private PlayerListRequest Request = new();
    private List<PlayerModel> Players = new();
    private bool IsLoading;
    private int TotalCount = 1;
    private int PageSize = 20;

    protected override async Task OnInitializedAsync()
    {
        await InitData(1);
    }

    private async Task InitData(int page)
    {
        try
        {
            IsLoading = true;
            Request.Filter.Skip = (page - 1) * PageSize;
            Request.Filter.Take = PageSize;
            var result = await PlayersApiClient.List(Request);
            Players = result.Result?.ToList() ?? new List<PlayerModel>();
            result.TotalCount ??= 1;
            TotalCount = result.TotalCount.Value / PageSize;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void GoToPlayer(int id)
    {
        _NavigationManager.NavigateTo($"/players/edit/{id}");
    }


}